---
import Layout from '../../layouts/Layout.astro';
import AuthProtected from '../../features/auth/AuthProtected.astro';
const { id } = Astro.params;
---
<Layout title={`Detalles del Paciente ${id}`}>
  <AuthProtected>
    <main id="patient-detail-page" data-patient-id={id} class="container mx-auto p-8">
      <div id="loading-state" class="text-center p-8">
        <p class="text-gray-500">Cargando datos del paciente...</p>
      </div>
  
      <div id="error-state" class="hidden text-center p-8 bg-red-100 border border-red-400 text-red-700 rounded">
        <p id="error-message"></p>
      </div>
  
      <div id="patient-content" class="hidden">
        <a href="/patients" class="text-blue-600 hover:underline mb-6 inline-block">&larr; Volver a la lista de pacientes</a>
        <h1 id="patient-name" class="text-4xl font-bold text-gray-800 mb-4"></h1>
  
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-gray-600">
          <div>
            <p class="font-semibold">Cédula:</p>
            <p id="patient-cedula"></p>
          </div>
          <div>
            <p class="font-semibold">Teléfono:</p>
            <p id="patient-phone"></p>
          </div>
        </div>
        
        <div class="mt-8 border-t pt-8">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Última entrada del historial médico -->
            <div id="last-history-entry-container" class="bg-gray-800 p-6 rounded-lg hidden">
              <h3 class="text-xl font-semibold text-gray-100 mb-4">Última Entrada del Historial</h3>
              <div id="last-history-entry-content">
                <!-- Contenido de la última entrada se insertará aquí -->
              </div>
              <a id="view-full-history-button" href="#" class="mt-4 inline-block bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700">Ver Historial Completo</a>
            </div>

            <p id="no-history-message" class="text-gray-400 hidden">No hay entradas en el historial médico para este paciente.</p>
          </div>
          
          <!-- Plantilla para una entrada del historial -->
          <template id="history-item-template">
            <li class="p-4 border border-gray-600 rounded-lg bg-gray-700 cursor-pointer hover:bg-gray-600 transition-colors duration-200">
              <p class="font-semibold text-gray-100" data-template-description></p>
              <p class="text-sm text-gray-400 mt-1" data-template-date></p>
            </li>
          </template>
        </div>
      </div>
    </main>
  </AuthProtected>
</Layout>

<script>
  import PatientsModule, { currentPatient } from '../../features/patients/patientsModule.js';
  import MedicalHistoryModule, { history } from '../../features/medical_history/medical_history.module.js';

  const page = document.getElementById('patient-detail-page');
  const patientId = page?.dataset.patientId;

  const loadingState = document.getElementById('loading-state');
  const errorState = document.getElementById('error-state');
  const errorMessage = document.getElementById('error-message');
  const patientContent = document.getElementById('patient-content');
  const patientNameEl = document.getElementById('patient-name');
  const patientCedulaEl = document.getElementById('patient-cedula');
  const patientPhoneEl = document.getElementById('patient-phone');

  // Elementos del historial médico
  const lastHistoryEntryContainer = document.getElementById('last-history-entry-container');
  const lastHistoryEntryContent = document.getElementById('last-history-entry-content');
  const noHistoryMessage = document.getElementById('no-history-message');
  const historyItemTemplate = document.getElementById('history-item-template');
  const viewFullHistoryButton = document.getElementById('view-full-history-button');

  const formatDate = (entry_date) => {
    if (!entry_date) return 'Fecha desconocida';
    const date = new Date(entry_date);
    return isNaN(date.getTime()) ? 'Fecha inválida' : date.toLocaleDateString();
  };

  // Suscripción para actualizar los datos del paciente
  const unsubscribePatient = currentPatient.subscribe(patient => {
    if (patient && patientNameEl && patientCedulaEl && patientPhoneEl) {
      patientNameEl.textContent = patient.name;
      patientCedulaEl.textContent = patient.cedula || 'No especificado';
      patientPhoneEl.textContent = patient.phone || 'No especificado';

      loadingState?.classList.add('hidden');
      errorState?.classList.add('hidden');
      patientContent?.classList.remove('hidden');
    }
  });

  // Suscripción para actualizar la lista del historial médico
  const unsubscribeHistory = history.subscribe(entries => {
    if (!lastHistoryEntryContainer || !lastHistoryEntryContent || !noHistoryMessage || !viewFullHistoryButton) return;

    // Clear previous content
    lastHistoryEntryContent.innerHTML = '';
    lastHistoryEntryContainer.classList.add('hidden');
    noHistoryMessage.classList.add('hidden');

    if (entries.length === 0) {
      noHistoryMessage.classList.remove('hidden');
      viewFullHistoryButton.classList.add('hidden'); // Hide button if no history
    } else {
      lastHistoryEntryContainer.classList.remove('hidden');
      viewFullHistoryButton.classList.remove('hidden'); // Show button if there's history

      const lastEntry = entries[entries.length - 1]; // Get the last entry

      const templateNode = historyItemTemplate.content.cloneNode(true);
      const listItem = templateNode.querySelector('li');
      const descriptionEl = templateNode.querySelector('[data-template-description]');
      const dateEl = templateNode.querySelector('[data-template-date]');

      descriptionEl.textContent = lastEntry.medical_inform;
      dateEl.textContent = `Fecha: ${formatDate(lastEntry.entry_date)}`;

      // Make the list item clickable and navigate to the detail page
      if (listItem) {
        listItem.dataset.entryId = lastEntry.id;
        listItem.addEventListener('click', () => {
          window.location.href = `/medical-history/entry/${lastEntry.id}`;
        });
      }

      lastHistoryEntryContent.appendChild(templateNode);
      viewFullHistoryButton.href = `/medical-history/${patientId}`; // Set the link for the button
    }
  });

  // Cargar los datos iniciales cuando la página carga
  if (patientId) {
    Promise.all([
      PatientsModule.getPatientById(patientId),
      MedicalHistoryModule.getHistoryByPatientId(patientId)
    ]).catch(err => {
      console.error("Failed to load patient data:", err);
      loadingState?.classList.add('hidden');
      patientContent?.classList.add('hidden'); // Ensure content is hidden on error
      if (errorState && errorMessage) {
        // Mostramos un mensaje genérico en español en lugar de err.message
        errorMessage.textContent = 'No se pudo cargar la información del paciente. Verifique su conexión o intente más tarde.';
        errorState.classList.remove('hidden');
      }
    });
  }

  // Limpiar suscripciones y stores al navegar fuera de la página
  // para evitar fugas de memoria y datos incorrectos en otras páginas.
  document.addEventListener('astro:before-swap', () => {
    unsubscribePatient();
    unsubscribeHistory();
    currentPatient.set(null);
    history.set([]);
  }, { once: true });
</script>