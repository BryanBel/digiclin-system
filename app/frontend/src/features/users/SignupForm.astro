<div class="w-full max-w-md p-4 md:px-8 space-y-6 bg-white dark:bg-gray-800 rounded-lg shadow-md">
  <h1 class="text-2xl font-bold text-center text-gray-900 dark:text-white">Create an Account</h1>

  <form id="signup-form" class="space-y-6" novalidate>
    <!-- Email Field -->
    <div>
      <label for="email" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Email</label>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <!-- Heroicon: AtSymbolIcon -->
          <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 12a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0Zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25" />
          </svg>
        </div>
        <input
          type="email"
          id="email"
          name="email"
          class="w-full pl-10 pr-4 py-2 text-gray-900 bg-gray-50 border rounded-lg focus:ring-blue-500 focus:outline-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white transition-colors duration-200"
          placeholder="you@example.com"
          required
        />
      </div>
    </div>

    <!-- Password Field -->
    <div>
      <label for="password" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">Password</label>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <!-- Heroicon: LockClosedIcon -->
          <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 10.5V6.75a4.5 4.5 0 1 0-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-6.75a2.25 2.25 0 0 0-2.25-2.25H6.75a2.25 2.25 0 0 0-2.25 2.25v6.75a2.25 2.25 0 0 0 2.25 2.25Z" />
          </svg>
        </div>
        <input
          type="password"
          id="password"
          name="password"
          class="w-full pl-10 pr-4 py-2 text-gray-900 bg-gray-50 border rounded-lg focus:ring-blue-500 focus:outline-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white transition-colors duration-200"
          placeholder="••••••••"
          required
        />
      </div>
    </div>

    <!-- Submit Button -->
    <button
      type="submit"
      id="submit-button"
      class="w-full px-5 py-3 text-base font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 disabled:bg-gray-400 disabled:cursor-not-allowed dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 dark:disabled:bg-gray-600 transition-colors duration-200"
    >
      Create Account
    </button>
    <p id="error-message" class="text-red-500 text-sm text-center h-4"></p>
  </form>
  <p class="text-center text-sm text-gray-600 dark:text-gray-400">
    Already have an account? <a href="/login" class="font-medium text-blue-600 hover:underline dark:text-blue-500">Sign in</a>
  </p>
</div>

<script>
  import AuthModule from "../auth/authModule.js";

  const form = document.querySelector<HTMLFormElement>('#signup-form');
  const submitButton = document.querySelector<HTMLButtonElement>('#submit-button');
  const errorMessageEl = document.querySelector<HTMLParagraphElement>('#error-message');

  if (form && submitButton && errorMessageEl) {
    const originalButtonText = submitButton.textContent;

    form.addEventListener('submit', async (event: SubmitEvent) => {
      event.preventDefault();
      errorMessageEl.textContent = '';

      submitButton.disabled = true;
      submitButton.textContent = 'Creating Account...';

      const formData = new FormData(form);
      const email = formData.get('email') as string;
      const password = formData.get('password') as string;

      try {
        await AuthModule.register({ email, password });
        // On success, hide the form and show a confirmation message.
        const parentContainer = form.parentElement;
        if (parentContainer) {
          form.style.display = 'none';
          parentContainer.querySelector('p.text-center')?.remove(); // Remove "Already have an account?" link
          const successMessage = document.createElement('div');
          successMessage.className = 'text-center';
          successMessage.innerHTML = `
            <h2 class="text-xl font-bold text-gray-900 dark:text-white">¡Registro Exitoso!</h2>
            <p class="mt-2 text-gray-600 dark:text-gray-400">Hemos enviado un enlace de verificación a tu correo. Por favor, revisa tu bandeja de entrada.</p>
            <a href="/login" class="mt-4 inline-block font-medium text-blue-600 hover:underline dark:text-blue-500">Volver a Iniciar Sesión</a>
          `;
          parentContainer.appendChild(successMessage);
        }
      } catch (error: any) {
        console.error('Signup failed:', error);
        const errorData = await error?.response?.json().catch(() => null);
        errorMessageEl.textContent = errorData?.message || 'An unexpected error occurred.';
      } finally {
        if (form.style.display !== 'none') {
          submitButton.disabled = false;
          submitButton.textContent = originalButtonText;
        }
      }
    });
  }
</script>