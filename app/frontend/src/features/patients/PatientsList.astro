
---
---

<ul id="patients-list" class="m-0 p-2 list-none overflow-auto flex flex-col gap-8 rounded-md border border-gray-300 h-full">
  <!-- Patient items will be rendered here by the client-side script -->
</ul>

<script>
  import PatientsModule, { patients } from "./PatientsModule.js";

  const patientsList = document.querySelector('#patients-list');

  // Fetch initial data
  await PatientsModule.getPatients();

  // Subscribe to changes in the patients store
  patients.subscribe(allPatients => {
    if (!patientsList) return;

    const fragment = document.createDocumentFragment();

    if (allPatients.length === 0) {
        const noPatientsLi = document.createElement('li');
        noPatientsLi.textContent = 'No se encontraron pacientes.';
        noPatientsLi.className = 'text-gray-500 p-4';
        fragment.appendChild(noPatientsLi);
    } else {
      // Render each patient
      for (const patient of allPatients) {
        const patientItem = document.createElement('li');
        patientItem.id = `patient-${patient.id}`;
        // This is a simplified version of your PatientItem component's output.
        // You can expand this to match its structure and styling.
        patientItem.className = 'p-4 border-b flex justify-between items-center cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700';
        patientItem.innerHTML = `<span class="patient-name">${patient.name}</span>`;
        fragment.appendChild(patientItem);
      }
    }
    // Replace the list content efficiently in one operation
    patientsList.replaceChildren(fragment);
  });
</script>
